version: "3"

# Указываем, какие сервисы DC должен сбилдить и запустить
services:
  # Сервис 'api'
  api:
    # DC берёт DF из папки './api'
    build: ./api
    command: npm run start
    # Если контейнер внепланово остановился или произошла ошибка - DC заново запустит контейнер
    restart: unless-stopped
    ports:
      # Пробрасываем порт контейнера наружу:
      # хост:контейнер
      - "3000:3200"
    # Задаем переменные окружения
    environment:
      # Порт внутри контейнера
      - PORT=3200
      - HOST=http://docker-app.com
      # MONGO_URL начинается с 'mongodb://', далее имя сервиса, в котором находится БД - 'api_db:', далее стандартный порт mongo - '27017'
      - MONGO_URL=mongodb://api_db:27017/api
    depends_on:
      # Запуск сервиса 'api' выполнять после сервиса сервиса 'api_db'
      - api_db

  api_db:
    image: mongo:latest
    volumes:
      # mongodb_api - имя, которое мы присваиваем для volume
      # /data/db - место, где mongo хранит данные
      # То-есть мы говорим, что volume с именем mongodb_api на хосте конектится к /data/db внутри контейнера
      - mongodb_api:/data/db

# Запись ниже говорит, что мы можем использовать volume с именем mongodb_api в любом нашем сервисе 
volumes:
  mongodb_api:
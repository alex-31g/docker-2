version: "3"

# docker-compose.development.yml - необходим на этапе разработки.
# В данном файле мы можем добавить необходимые на этапе разработки комманды, 
# а также переопределить комманды, описанные ранне в docker-compose.yml  - 
# это могут быть как простые комманды запуска проекта, переменные окружения, 
# так и определение новых volume, которые необходимы только в режиме development

services:
  frontend:

    # Если для сервиса существуют 2 разных Dockerfile - prod и dev
    # то путь к Dockerfile указывается следующим образом:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev

    # Перезапись command
    command: npm run start
    # Два поля ниже - обязательны при работе с react внутри контейнера -
    # они позволяют запустить интерактивную консоль react в контейнере
    stdin_open: true # аналог docker run -i
    tty: true # аналог docker run -t
    # Указываем volume для данного контейнера, чтобы сохранить его на хосте
    volumes:
      # Данные хоста по адрессу ./fontend/src положить
      # внутрь контейнера по адрессу /usr/src/app/src.
      # /usr/src/app/ - с какого каталога начинать работу внутри контейнера,
      # данный путь мы задали внутри Dockerfile
      - ./frontend/src:/usr/src/app/src
    environment:
      # Необходимо для hot-reload react
      - CHOKIDAR_USEPOLLING=true

  api:
    # Перезапись command
    command: npm run dev
    # Указываем volume для данного контейнера, чтобы сохранить его на хосте
    volumes:
      # Данные хоста по адрессу ./api/src положить
      # внутрь контейнера по адрессу /usr/src/app/src.
      # /usr/src/app/ - с какого каталога начинать работу внутри контейнера,
      # данный путь мы задали внутри Dockerfile
      - ./api/src:/usr/src/app/src
      
  auth:
    # Перезапись command
    command: npm run dev
    # Указываем volume для данного контейнера, чтобы сохранить его на хосте
    volumes:
      # Данные хоста по адрессу ./auth/src положить
      # внутрь контейнера по адрессу /usr/src/app/src.
      # /usr/src/app/ - с какого каталога начинать работу внутри контейнера,
      # данный путь мы задали внутри Dockerfile
      - ./auth/src:/usr/src/app/src

  nginx:
    volumes: 
      # Данные хоста по адрессу ./nginx/nginx.conf.dev положить
      # внутрь контейнера по адрессу /etc/nginx/conf.d/nginx.conf
      - ./nginx/nginx.conf.dev:/etc/nginx/conf.d/nginx.conf
